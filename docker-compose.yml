version: '3.8'

services:
  shipboard-ai:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=mysql://shipboard_user:password@mysql:3306/shipboard_ai
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=shipboard_user
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=shipboard_ai
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./data:/app/data
    restart: unless-stopped
    networks:
      - shipboard-network

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=shipboard_ai
      - MYSQL_USER=shipboard_user
      - MYSQL_PASSWORD=password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: unless-stopped
    networks:
      - shipboard-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./static:/var/www/static
    depends_on:
      - shipboard-ai
    restart: unless-stopped
    networks:
      - shipboard-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - shipboard-network

volumes:
  mysql_data:
  redis_data:

networks:
  shipboard-network:
    driver: bridge
